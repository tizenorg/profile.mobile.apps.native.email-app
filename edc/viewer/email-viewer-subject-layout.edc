/*
 * Copyright (c) 2009-2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

//sender_layout
#define BUTTON_HEIGHT 50
#define BUTTON_WIDTH 50
#define SENDER_LAYOUT_HEIGHT 220
#define SENDER_BUTTON_BASE_WIDTH	167
#define SENDER_LAYOUT_TOP_PADDING 24
#define SENDER_LAYOUT_LEFT_PADDING 32
#define SENDER_LAYOUT_RIGHT_PADDING 32
#define SENDER_LAYOUT_BOTTOM_PADDING 35
#define SENDER_NAME_HEIGHT 55
#define SENDER_EMAIL_HEIGHT	44
#define SENDER_DATE_HEIGHT	39
#define	SENDER_BTN_PADDING_LEFT	35
#define SENDER_DETAILS_BTN_WIDTH	120
#define SENDER_DETAILS_BTN_HEIGHT	44
#define	PRIORITY_ICON_RIGHT_PADDING	15 48
#define SENDER_NAME_FONT_SIZE 40
#define	SENDER_EMAIL_FONT_SIZE 32
#define SENDER_DATE_FONT_SIZE	28
#define SENDER_DETAILS_BTN_TOP_PADDING 23
#define SENDER_DETAILS_BTN_RIGHT_PADDING 32
#define SENDER_BTN_MIN_WIDTH 150

//subject layout
#define SUBJECT_HEIGHT 110
#define SUBJECT_PADDING_TOP_MIN 8.0
#define SUBJECT_PADDING_BOTTOM_MIN 14.0
#define SUBJECT_BACK_BTN_PADDING_TOP 15.0
#define SUBJECT_PADDING_LEFT 10.0
#define SUBJECT_BACK_BUTTON_PADDING_RIGHT 10.0
#define SUBJECT_BACK_BTN_SIZE 80.0
#define SUBJECT_PADDING_RIGHT 32.0
#define SUBJECT_TEXT_MIN_HEIGHT 44.0
#define SUBJECT_TEXT_MAX_HEIGHT 88.0

//attachment layout
#define ATTACHMENT_LAYOUT_HEIGHT	80
#define ATTACHMENT_LEFT_PADDING		32
#define ATTACHMENT_RIGHT_PADDING	17
#define ATTACHMENT_TEXT_SIZE	36

//body button
#define DOWNLOAD_BUTTON_MIN_HEIGHT	96
#define DOWNLOAD_BUTTON_TEXT_SIZE	32
#define DOWNLOAD_BUTTON_TEXTBLOCK_HEIGHT_MIN 44
#define DOWNLOAD_BUTTON_TEXTBLOCK_PADDING_BOTTOM_HEIGHT 32
#define TRANSPARENT_COLOR_VALUE 0 0 0 0

#define EVENT_PART(NAME, SRC)  \
		part { name: NAME; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1.to: SRC; \
				rel2.to: SRC; \
				color: 0 0 0 0; \
			} \
		}


styles {
	style { name: "subject_label_style";
		base: "font=Tizen:style=Condensed font_size=32 color=#ffffff ellipsis=1.0";
		tag:  "br" "\n";
		tag:  "ps" "ps";
		tag:  "b" "+ font_weight=Bold";
		tag:  "tab" "\t";
         }
}

group {
	name: "elm/label/base/subject_text";
	parts {
		part { name: "label.text.clip";
		type: RECT;
		description { state: "default" 0.0;
		}
	}
		part { name: "elm.text";
			type: TEXTBLOCK;
			scale: 1;
			clip_to: "label.text.clip";
			description { state: "default" 0.0;
				text {
					style: "subject_label_style";
					min: 0 1;
					max: 0 1;
					align: 0 0.5;
				}
			}
	    	}
         }
}

group {
	name: "ev/subject/base";
	parts {
		E_PART_RECT("base",
			mouse_events: 1;
			repeat_events: 1;
			scale: 1;
			description { state: "default" 0.0;
				visible: 1;
				color: NAVIFRAME_TITLE_BG;
				min: 0 SUBJECT_HEIGHT;
			}
		)
		E_PART_PADDING_LEFT(SUBJECT_PADDING_LEFT)
		E_PART_PADDING_RIGHT(SUBJECT_PADDING_RIGHT)
		E_PART_SPACER("ev.back_btn.padding.top",
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 1;
				align: 0.5 0.0;
				rel2.relative: 1.0 0.0;
				min: 0 SUBJECT_BACK_BTN_PADDING_TOP;
				max: -1 SUBJECT_BACK_BTN_PADDING_TOP;
			}
		)
		E_PART_SWALLOW("ev.swallow.back_button",
			mouse_events: 1;
			repeat_events: 1;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 0.0 0.0;
				fixed: 1 1;
				rel1 {
					relative: 1.0 1.0;
					to_x: "padding.left";
					to_y: "ev.back_btn.padding.top";
				}
				rel2 {
					relative: 1.0 1.0;
					to_x: "padding.left";
					to_y: "ev.back_btn.padding.top";
				}
				min: SUBJECT_BACK_BTN_SIZE SUBJECT_BACK_BTN_SIZE;
				max: SUBJECT_BACK_BTN_SIZE SUBJECT_BACK_BTN_SIZE;
			}
		)
		E_PART_SWALLOW("ev.back_btn.padding.right",
			mouse_events: 1;
			repeat_events: 1;
			scale: 1;
			description {
				state: "default" 0.0;
				align: 0 0;
				fixed: 1 0;
				rel1 {
					relative: 1.0 0.0;
					to_x: "ev.swallow.back_button";
				}
				rel2 {
					relative: 1.0 1.0;
					to_x: "ev.swallow.back_button";
				}
				min: SUBJECT_BACK_BUTTON_PADDING_RIGHT 0;
				max: SUBJECT_BACK_BUTTON_PADDING_RIGHT -1;
			}
		)

		E_PART_SWALLOW("ev.swallow.subject_label",
			mouse_events: 1;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 1;
				align: 0 0.5;
				rel1 {
					relative: 1.0 1.0;
					to_x: "ev.back_btn.padding.right";
					to_y: "ev.entry.padding_top";
				}
				rel2 {
					relative: 0.0 0.0;
					to_x: "padding.right";
					to_y: "ev.entry.padding_bottom";
				}
				min: 0 	SUBJECT_TEXT_MIN_HEIGHT;
				max: -1 SUBJECT_TEXT_MAX_HEIGHT;
			}
		)
		E_PART_SPACER("ev.entry.padding_top",
			mouse_events: 1;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 1;
				align: 0.5 0.0;
				rel2.relative: 1.0 0.0;
				min: 0 SUBJECT_PADDING_TOP_MIN;
				max: -1 SUBJECT_PADDING_TOP_MIN;
			}
		)
		E_PART_SPACER("ev.entry.padding_bottom",
			mouse_events: 1;
			scale: 1;
			description {
				state: "default" 0.0;
				fixed: 0 1;
				rel1.relative: 0.0 1.0;
				align: 0.5 1.0;
				min: 0 SUBJECT_PADDING_BOTTOM_MIN;
				max: -1 SUBJECT_PADDING_BOTTOM_MIN;
			}
		)
	}
}

group {
	name: "ev/recipient/base";
	parts {
		E_SWALLOW_BG
		E_PART_SWALLOW("ev.swallow.content",
			description { state: "default" 0.0;
			}
		)
	}
}

group {
	name: "ev/sender/base";
	parts {
		E_PART_BASE_H(SENDER_LAYOUT_HEIGHT)
		E_SWALLOW_BG
		E_PART_PADDING_TOP(SENDER_LAYOUT_TOP_PADDING)
		E_PART_PADDING_BOTTOM(SENDER_LAYOUT_BOTTOM_PADDING)
		E_PART_PADDING_LEFT(SENDER_LAYOUT_LEFT_PADDING)
		E_PART_PADDING_RIGHT(SENDER_LAYOUT_RIGHT_PADDING)
		E_PART_SPACER("sender.btn.base",
			repeat_events: 1;
			description { state: "default" 0.0;
				min: SENDER_BUTTON_BASE_WIDTH 96;
				fixed: 1 0;
				align: 1 0.5;
				rel1 {
					relative: 0.0 1.0;
					to_x: "padding.right";
					to_y: "padding.top";
					offset: 0 3;
				}
				rel2 {
					relative: 0.0 0.0;
					to_x: "padding.right";
					to_y: "padding.bottom";
					offset: 0 -3;
				}
			}
		)
		E_PART_SPACER("sender.info.base",
			repeat_events: 1;
			description { state: "default" 0.0;
				rel1 {
					relative: 1.0 1.0;
					to_x: "padding.left";
					to_y: "padding.top";
				}
				rel2 {
					relative: 0.0 0.0;
					to_x: "sender.btn.base";
					to_y: "padding.bottom";
				}
			}
		)
		part { name: "sender.favourite.btn";
			type: RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				min: BUTTON_WIDTH BUTTON_HEIGHT;
				max: BUTTON_WIDTH BUTTON_HEIGHT;
				fixed: 1 1;
				align: 1.0 0.0;
				visible: 1;
				rel1 {
					relative: 0.0 1.0;
					to_x: "padding.right";
					to_y: "padding.top";
				}
				rel2 {
					relative: 0.0 1.0;
					to_x: "padding.right";
					to_y: "padding.top";
				}
				color: 0 0 0 0;
			}
			description {
				state: "hide" 0.0;
				inherit: "default" 0.0;
				visible: 0;
			}
		}
		E_PART_SPACER("btn.padding.left",
			description {
				state: "default" 0.0;
				min: SENDER_BTN_PADDING_LEFT 0;
				fixed: 1 0;
				align: 1.0 0.0;
				rel1 {
					relative: 0.0 0.0;
					to: "sender.favourite.btn";
				}
				rel2 {
					relative: 0.0 0.0;
					to: "sender.favourite.btn";
				}
			}
		)
		part { name:"sender.reply.btn";
			type: RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				min: BUTTON_WIDTH BUTTON_HEIGHT;
				max: BUTTON_WIDTH BUTTON_HEIGHT;
				fixed: 1 1;
				align: 1.0 0.0;
				visible: 1;
				rel1 {
					relative: 0.0 0.0;
					to: "btn.padding.left";
				}
				rel2 {
					relative: 0.0 0.0;
					to: "btn.padding.left";
				}
				color: 0 0 0 0;
			}
		}
		EVENT_PART("sender.fav.event", "sender.favourite.btn")
		EVENT_PART("sender.rep.event", "sender.reply.btn")
		E_PART_TEXT("sender.name.text",
			mouse_events: 1;
			description {
				state: "default" 0.0;
				align: 0.5 0.0;
				min: 0 SENDER_NAME_HEIGHT;
				fixed: 0 1;
				visible: 1;
				rel1 {
					relative: 0.0 0.0;
					to: "sender.info.base";
				}
				rel2 {
					relative: 1.0 0.0;
					to: "sender.info.base";
				}
				text {
					size: SENDER_NAME_FONT_SIZE;
					align: 0.0 0.5;
				}
				color: ATO010;
			}
		)

		E_PART_SPACER("sender.email.rect",
			mouse_events: 1;
			description {
				state: "default" 0.0;
				align: 0.5 0.0;
				min: 0 SENDER_EMAIL_HEIGHT;
				fixed: 0 1;
				rel1 {
					relative: 0.0 1.0;
					to: "sender.name.text";
				}
				rel2 {
					relative: 1.0 1.0;
					to: "sender.name.text";
				}
			}
		)
		E_PART_SWALLOW("sender.priority.icon",
			description {
				state: "default" 0.0;
				fixed: 1 1;
				align: 0.0 0.0;
				rel1 {
					relative: 0.0 0.0;
					to: "sender.email.rect";
				}
				rel2 {
					relative: 0.0 0.0;
					to: "sender.email.rect";
				}
			}
		)
		E_PART_SPACER("sender.priority.icon.padding.right",
			description {
				state: "default" 0.0;
				min: PRIORITY_ICON_RIGHT_PADDING;
				max: PRIORITY_ICON_RIGHT_PADDING;
				fixed: 1 1;
				align: 0 0;
				rel1 {
					relative: 1.0 0.0;
					to: "sender.priority.icon";
				}
				rel2 {
					relative: 1.0 1.0;
					to: "sender.priority.icon";
				}
			}
			description {
				state: "hide" 0.0;
				inherit: "default" 0.0;
				min: 0 0;
				max: 0 0;
				fixed: 1 1;
			}
		)
		E_PART_TEXT("sender.email.text",
			mouse_events: 1;
			description {
				state: "default" 0.0;
				min: 0 SENDER_EMAIL_HEIGHT;
				fixed: 0 1;
				rel1 {
					relative: 1.0 0.0;
					to: "sender.priority.icon.padding.right";
				}
				rel2 {
					relative: 1.0 1.0;
					to: "sender.email.rect";
				}
				text {
					size: SENDER_EMAIL_FONT_SIZE;
					align: 0.0 0.5;
				}
				color: ATO011;
			}
		)
		E_PART_SPACER("sender.expand.btn.padding.top",
			description {
				state: "default" 0.0;
				min: 0 SENDER_DETAILS_BTN_TOP_PADDING;
				max: -1 SENDER_DETAILS_BTN_TOP_PADDING;
				fixed: 0 1;
				align: 0 0;
				rel1 {
					relative: 0.0 1.0;
					to_y: "sender.email.text";
				}
			}
		)
		E_PART_SPACER("sender.expand.btn.rect",
			description {
				state: "default" 0.0;
				max: -1 SENDER_DETAILS_BTN_HEIGHT;
				align: 0.0 0.0;
				rel1 {
					relative: 0.0 1.0;
					to_x: "sender.email.rect";
					to_y: "sender.expand.btn.padding.top";
				}
			}
		)

		E_PART_SWALLOW("sender.expand.btn",
			description {
				state: "default" 0.0;
				align: 0.0 0.5;
				min: SENDER_BTN_MIN_WIDTH 0;
				rel1 {
					relative: 0.0 0.5;
					to: "sender.expand.btn.rect";
				}
				rel2 {
					relative: 0.0 0.5;
					to: "sender.expand.btn.rect";
				}
			}
		)
		E_PART_SPACER("sender.expand.btn.padding.right",
			description {
				state: "default" 0.0;
				min: SENDER_DETAILS_BTN_RIGHT_PADDING 0;
				max: SENDER_DETAILS_BTN_RIGHT_PADDING 0;
				fixed: 1 1;
				align: 0 0;
				rel1 {
					relative: 1.0 0.0;
					to: "sender.expand.btn";
				}
				rel2 {
					relative: 1.0 1.0;
					to: "sender.expand.btn";
				}
			}
		)
		E_PART_TEXT("sender.date.text",
			mouse_events: 1;
			description {
				state: "default" 0.0;
				min: 0 SENDER_DATE_HEIGHT;
				max: -1 SENDER_DATE_HEIGHT;
				fixed: 0 1;
				rel1 {
					relative: 1.0 1.0;
					to_x: "sender.expand.btn.padding.right";
					to_y: "sender.expand.btn.padding.top";
				}
				rel2 {
					relative: 0.0 1.0;
					to_x: "padding.right";
				}
				text {
					size: SENDER_DATE_FONT_SIZE;
					align: 1 0.5;
				}
				align: 1.0 0.0;
				color: ATO012;
			}
		}
	)
	programs {

		program {
			name: "set_priority_sender_image";
			signal: "set.priority.sender";
			source: "elm";
			script {
				set_state(PART:"sender.priority.icon.padding.right", "default", 0.0);
			}
		}
		program {
			name: "remove_priority_sender_image";
			signal: "remove.priority.sender";
			source: "elm";
			script {
				set_state(PART:"sender.priority.icon.padding.right", "hide", 0.0);
			}
		}
	}
}

group {
	name: "ev/attachment/base";
	images {
		image: "viewer_icon/email_icon_arrow_next.png" COMP;
	}
	parts {
		E_PART_BASE_H(ATTACHMENT_LAYOUT_HEIGHT)
		E_PART_BG (LIST_BG_COLOR)
		E_PART_PADDING_LEFT(ATTACHMENT_LEFT_PADDING)
		E_PART_PADDING_RIGHT(ATTACHMENT_RIGHT_PADDING)
		E_PART_RECT("attachment.bottom.divider",
			description { state: "default" 0.0;
			fixed: 0 1;
			max: -1 1;
			rel1 {
				relative: 0.0 1.0;
				offset: 0 -1;
			}
			rel2 {
				relative: 1.0 1.0;
			}
			color: AO005;
			}
		)
		E_PART_TEXT("attachment.info.text",
			mouse_events: 0;
			description {
				state: "default" 0.0;
				rel1 { relative: 1.0 0.0; to: "padding.left"; }
				rel2 { relative: 0.0 1.0; to_x: "attachment.icon2"; to_y: "padding.right"; }
				text {
					size: ATTACHMENT_TEXT_SIZE;
					min: 0 0;
					align: 0.0 0.5;
				}
				color: ATO018;
			}
		)
		part { name: "attachment.icon2";
			type: IMAGE;
			repeat_events: 0;
			description {
				state: "default" 0.0;
				image.normal: "viewer_icon/email_icon_arrow_next.png";
				color: W023;
				min: 40 40; 
				max: 40 40;
				fixed: 1 1; align: 1.0 0.5;
				rel2 { relative: 0.0 1.0; to: "padding.right"; }
			}
			description {
				state: "pressed" 0.0;
				inherit: "default" 0.0;
				color: W023P;
			}
		}
		E_PART_SWALLOW("attachment.focus.btn",
			description { state: "default" 0.0;
			fixed: 1 1;
				color: 0 0 0 0;
			}
		)
		E_PART_RECT("attachment.event.rect",
			mouse_events: 1;
			description { state: "default" 0.0;
				color: 0 0 0 0;
			}
		)
	}

	programs {
		program { name: "click_layout";
			signal: "mouse,clicked,1";
			source: "attachment.event.rect";
			action: SIGNAL_EMIT "attachment.clicked" "edje";
			after: touch_snd;
		}
		program { name: "touch_snd";
			action: RUN_PLUGIN "touch_sound";
		}
		program { name: "pressed";
			signal: "mouse,down,1";
			source: "attachment.event.rect";
			script {
				set_state(PART:"attachment.icon2", "pressed", 0.0);
			}
		}
		program { name: "unpressed";
			signal: "mouse,up,1";
			source: "attachment.event.rect";
			script {
				set_state(PART:"attachment.icon2", "default", 0.0);
			}
		}
	}
}
#define LIST_C_TYPE2_RIGHT_PADDING_WIDTH 15
#define LIST_C_TYPE2_ICON_SIZE 40 40
#define LIST_C_TYPE2_TOP_PADDING 45
#define LIST_C_TYPE2_BOTTOM_PADDING 32
// customized 2.2.1.C2
group { name: "elm/layout/list/C/type.2.custom/default";
	parts {
		part { name: "elm.padding.left";
			type : SPACER;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 0.0 0.5;
				rel2.relative: 0.0 1.0;
				min: 0 0;
				max: 0 -1;
			}
		}
		part { name: "elm.padding.top";
			type : SPACER;
			description { state: "default" 0.0;
				fixed: 0 1;
				align: 0.5 0.0;
				rel2.relative: 1.0 0.0;
				min: 0 LIST_C_TYPE2_TOP_PADDING;
				max: -1 LIST_C_TYPE2_TOP_PADDING;
			}
		}
		part { name: "elm.padding.bottom";
			type : SPACER;
			description { state: "default" 0.0;
				fixed: 0 1;
				align: 0.5 1.0;
				rel1.relative: 0.0 1.0;
				min: 0 LIST_C_TYPE2_BOTTOM_PADDING;
				max: -1 LIST_C_TYPE2_BOTTOM_PADDING;
			}
		}
		part { name: "elm.padding.right";
			type : SPACER;
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1.0 0.5;
				rel1.relative: 1 0;
				min: LIST_C_TYPE2_RIGHT_PADDING_WIDTH 0;
				max: LIST_C_TYPE2_RIGHT_PADDING_WIDTH -1;
			}
		}
		part { name: "event";
			type: RECT;
			description { state: "default" 0.0;
				color: 0 0 0 0;
			}
		}
		part { name: "elm.swallow.content";
			type : SWALLOW;
			description { state: "default" 0.0;
				rel1 {
					relative: 1 1;
					to_x: "elm.padding.left";
					to_y: "elm.padding.top";
				}
				rel2 {
					relative: 0 0;
					to_x: "elm.padding.right";
					to_y: "elm.padding.bottom";
				}
				min: LIST_C_TYPE2_ICON_SIZE;
				max: LIST_C_TYPE2_ICON_SIZE;
			}
		}
		part { name: "elm.swallow.event";
			type : SWALLOW;
			description { state: "default" 0.0;
				rel1 {
					relative: 0 0;
				}
				rel2 {
					relative: 1 1;
				}
			}
		}
	}
	programs {
		program { name: "click_layout";
			signal: "mouse,clicked,1";
			source: "event";
			action: SIGNAL_EMIT "clicked" "edje";
			after: touch_snd;
		}
		program { name: "touch_snd";
			action: RUN_PLUGIN "touch_sound";
		}
	}
}

#define PROG1 \
		programs { \
			program { name: "clicked"; \
				signal: "mouse,clicked,1"; \
				source: "bg"; \
				action: SIGNAL_EMIT "clicked" "edje"; \
				after: "touch_snd"; \
			} \
			program { name: "pressed"; \
				signal: "mouse,down,1"; \
				source: "bg"; \
				script { \
					set_state(PART:"icon", "pressed", 0.0); \
				} \
			} \
			program { name: "unpressed"; \
				signal: "mouse,up,1"; \
				source: "bg"; \
				script { \
					set_state(PART:"icon", "default", 0.0); \
				} \
			} \
			program { name: "touch_snd"; \
				action: RUN_PLUGIN "touch_sound"; \
			} \
		}

#define PROG2 \
		programs { \
			program { name: "clicked"; \
				signal: "mouse,clicked,1"; \
				source: "bg"; \
				action: SIGNAL_EMIT "clicked" "edje"; \
				after: "touch_snd"; \
			} \
			program { name: "touch_snd"; \
				action: RUN_PLUGIN "touch_sound"; \
			} \
		}
#define PROG3 \
		programs { \
			program { name: "clicked"; \
				signal: "mouse,clicked,1"; \
				source: "bg"; \
				action: SIGNAL_EMIT "clicked" "edje"; \
				after: "touch_snd"; \
			} \
			program { name: "pressed"; \
				signal: "mouse,down,1"; \
				source: "bg"; \
				script { \
					set_state(PART:"btn_text", "pressed", 0.0); \
				} \
			} \
			program { name: "unpressed"; \
				signal: "mouse,up,1"; \
				source: "bg"; \
				script { \
					set_state(PART:"btn_text", "default", 0.0); \
				} \
			} \
			program { name: "touch_snd"; \
				action: RUN_PLUGIN "touch_sound"; \
			} \
		}

#define BODY_BUTTON_STYLE(_name, _color) \
	style { \
		name: _name; \
		base: "align=center color="_color" font=Tizen:style=Regular font_size="DOWNLOAD_BUTTON_TEXT_SIZE" text_class=tizen ellipsis=1.0"; \
		tag:  "br" "\n"; \
		tag:  "tab" "\t"; \
	}

group { name: "elm/button/base/body_button";
	styles {
		BODY_BUTTON_STYLE("body_button_style_default", ATO015_HEX);
		BODY_BUTTON_STYLE("body_button_style_press", ATO015P_HEX);
		BODY_BUTTON_STYLE("body_button_style_dim", ATO015D_HEX);
	}
	parts {
		part { name : "bg";
			type : RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 DOWNLOAD_BUTTON_MIN_HEIGHT;
				color: COLOR_WHITE;
			}
		}
		E_PART_PADDING_BOTTOM(DOWNLOAD_BUTTON_TEXTBLOCK_PADDING_BOTTOM_HEIGHT);
		part { name: "elm.text";
			type: TEXTBLOCK;
			scale: 1;
			description { state: "default" 0.0;
				min: 0 DOWNLOAD_BUTTON_TEXTBLOCK_HEIGHT_MIN;
				text {
					style: "body_button_style_default";
					max: 1 0;
				}
			}
			description { state: "clicked" 0.0;
				inherit: "default" 0.0;
				text {
					style: "body_button_style_press";
					max: 1 0;
				}
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				text {
					style: "body_button_style_dim";
					max: 1 0;
				}
			}
		}
		part { name: "over1";
			type: RECT;
			scale: 1;
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				color: TRANSPARENT_COLOR_VALUE;
			}
		}
		part { name: "over2";
			type: RECT;
			scale: 1;
			repeat_events: 1;
			description { state: "default" 0.0;
				color: TRANSPARENT_COLOR_VALUE;
			}
		}
		part { name: "disabler";
			type: RECT;
			scale: 1;
			description { state: "default" 0.0;
				color: TRANSPARENT_COLOR_VALUE;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	programs {
		program { name: "pressed";
			signal: "mouse,down,1";
			source: "over1";
			action: SIGNAL_EMIT "elm,action,press" "";
			after: "button_press";
		}
		program { name: "button_press";
			action: STATE_SET "clicked" 0.0;
			target: "elm.text";
		}
		program { name: "clicked";
			signal: "mouse,clicked,1";
			source: "over1";
			action: SIGNAL_EMIT "elm,action,click" "";
			after: "button_unpress";
			after: "touch_sound";
		}
		program { name: "touch_sound";
			action: RUN_PLUGIN "touch_sound";
		}
		program { name: "unpressed";
			signal: "mouse,up,1";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,unpress" "";
			after: "button_unpress";
		}
		program { name: "button_unpress";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
		}
		program { name: "button_disable_set";
			action: STATE_SET "disabled" 0.0;
			target: "elm.text";
		}
		program { name: "button_enable_set";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
		}
		program {
			signal: "button_disable";
			source: "";
			action: STATE_SET "disabled" 0.0;
			target: "disabler";
			after : "button_disable_set";
		}
		program {
			signal: "button_enable";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "disabler";
			after : "button_enable_set";
		}
	}
}

#define ICON_BUTTON(NAME, IMG, PAD_L, PAD_T, WIDTH, HEIGHT, COLOR, PROG) \
	group { name: NAME; \
		images { image: IMG COMP; } \
		parts { \
			part { name: "bg"; \
				type: RECT; \
				scale: 1; \
				mouse_events: 1; \
				description { \
					state: "default" 0.0; \
					color: 0 0 0 0; \
				} \
			} \
			part { name: "pad_l_t"; \
				type: SPACER; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					min: PAD_L PAD_T; fixed: 1 1; \
					rel2.relative: 0 0; \
					align: 0 0; \
				} \
			} \
			part { name: "icon"; \
				type: IMAGE; \
				scale: 1; \
				repeat_events: 1; \
				description { \
					state: "default" 0.0; \
					image.normal: IMG; \
					color: COLOR; \
					min: WIDTH HEIGHT; max: WIDTH HEIGHT; \
					fixed: 1 1; align: 0 0; \
					rel1 { relative: 1 1; to: "pad_l_t"; } \
				} \
				description { \
					state: "pressed" 0.0; \
					inherit: "default" 0.0; \
				} \
			} \
		} \
		PROG\
	}

ICON_BUTTON("elm/layout/reply.icon/default", "list_icon/email_icon_reply.png", 0, 0, 50, 50, AO002, PROG1)
ICON_BUTTON("elm/layout/flag.none.icon/default", "list_icon/index_icon_favorite_off.png", 0, 0, 50, 50, AO003, PROG2)
ICON_BUTTON("elm/layout/flag.star.icon/default", "list_icon/index_icon_favorite_on.png", 0, 0, 50, 50, AO003, PROG2)
