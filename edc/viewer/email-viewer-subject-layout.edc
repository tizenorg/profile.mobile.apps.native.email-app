/*
 * Copyright (c) 2009-2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

//subject layout
#define SUBJECT_LAYOUT_RIGHT_PADDING 32
#define SUBJECT_LAYOUT_LEFT_PADDING 32
#define SUBJECT_LAYOUT_TOP_PADDING 24
#define SUBJECT_LAYOUT_BOTTOM_PADDING 12
#define SUBJECT_LAYOUT_FAVOURITE_BTN_OUTER_SIZE 80
#define SUBJECT_LAYOUT_FAVOURITE_BTN_INNER_SIZE 50
#define SUBJECT_LAYOUT_FAVOURITE_BTN_INNER_PADDING 15
#define SUBJECT_LAYOUT_FAVOURITE_BTN_TOP_PADDING (17 + SUBJECT_LAYOUT_FAVOURITE_BTN_INNER_PADDING)
#define SUBJECT_LAYOUT_FAVOURITE_BTN_RIGHT_PADDING (17 + SUBJECT_LAYOUT_FAVOURITE_BTN_INNER_PADDING)

//details layout
#define DETAILS_LAYOUT_LEFT_PADDING 32
#define DETAILS_LAYOUT_RIGHT_PADDING 32
#define DETAILS_LAYOUT_TOP_PADDING 12
#define DETAILS_LAYOUT_BOTTOM_PADDING 22
#define DETAILS_LAYOUT_BTN_RIGHT_PADDING 32
#define DETAILS_LAYOUT_BTN_MIN_WIDTH 150
#define DETAILS_LAYOUT_BTN_MIN_HEIGHT 50

//body button
#define DOWNLOAD_BUTTON_MIN_HEIGHT	96
#define DOWNLOAD_BUTTON_TEXT_SIZE	32
#define DOWNLOAD_BUTTON_TEXTBLOCK_HEIGHT_MIN 44
#define DOWNLOAD_BUTTON_TEXTBLOCK_PADDING_BOTTOM_HEIGHT 32
#define TRANSPARENT_COLOR_VALUE 0 0 0 0

//attachment layout
#define ATTACHMENT_TOP_PADDING				22
#define ATTACHMENT_BOTTOM_PADDING			22
#define ATTACHMENT_LEFT_PADDING				32
#define ATTACHMENT_RIGHT_PADDING			32
#define ATTACHMENT_ICON_SIZE				50
#define ATTACHMENT_ICON_RIGHT_PADDING		8

#define EVENT_PART(NAME, SRC)  \
		part { name: NAME; \
			type: SWALLOW; \
			scale: 1; \
			description { \
				state: "default" 0.0; \
				rel1.to: SRC; \
				rel2.to: SRC; \
				color: 0 0 0 0; \
			} \
		}

group {
	name: "ev/recipient/base";
	parts {
		E_SWALLOW_BG
		E_PART_SWALLOW("ev.swallow.content",
			description { state: "default" 0.0;
			}
		)
	}
}

group {
	name: "ev/header/details_layout";
	styles {
		style { name: "date_text_style";
			base: "font=BreezeSansFallback align=right font_size=28 color=#3DB9CC wrap=word ellipsis=1.0";
			tag: "br" "\n";
			tag: "tab" "\t";
		}
	}
	parts {
		E_PART_PADDING_LEFT(DETAILS_LAYOUT_LEFT_PADDING)
		E_PART_PADDING_RIGHT(DETAILS_LAYOUT_RIGHT_PADDING)
		E_PART_PADDING_TOP(DETAILS_LAYOUT_TOP_PADDING)
		E_PART_PADDING_BOTTOM(DETAILS_LAYOUT_BOTTOM_PADDING)

		E_PART_SWALLOW("swallow.details.btn",
				description { state: "default" 0.0;
					align: 0.0 0.5;
					fixed: 1 0;
					rel1 {
						relative: 1.0 1.0;
						to_x: "padding.left";
						to_y: "padding.top";
					}
					rel2 {
						relative: 1.0 0.0;
						to_x: "padding.left";
						to_y: "padding.bottom";
					}
					min: DETAILS_LAYOUT_BTN_MIN_WIDTH DETAILS_LAYOUT_BTN_MIN_HEIGHT;
				}
			)
	
		E_PART_SPACER("details.btn.padding.right",
			description { state: "default" 0.0;
				align: 0.0 0.5;
				fixed: 1.0 0.0;
				rel1 {
					relative: 1.0 1.0;
					to_x: "swallow.details.btn";
					to_y: "padding.top";
				}
				rel2 {
					relative: 1.0 0.0;
					to_x: "swallow.details.btn";
					to_y: "padding.bottom";
				}
				min: DETAILS_LAYOUT_BTN_RIGHT_PADDING 0;
			}
		)

		E_PART_TEXTBLOCK("text.date",
			description { state: "default" 0.0;
				align: 0.5 1.0;
				text {
					style: "date_text_style";
				}
				rel1 {
					relative: 1.0 1.0;
					to_x: "details.btn.padding.right";
					to_y: "padding.top";
				}
				rel2 {
					relative: 0.0 0.0;
					to_x: "padding.right";
					to_y: "padding.bottom";
				} 
			}
		)
	}
}

group {
	name: "ev/header/subject_layout";
	parts {
		E_PART_PADDING_LEFT(SUBJECT_LAYOUT_LEFT_PADDING)
		E_PART_PADDING_RIGHT(SUBJECT_LAYOUT_RIGHT_PADDING)
		E_PART_PADDING_TOP(SUBJECT_LAYOUT_TOP_PADDING)
		E_PART_PADDING_BOTTOM(SUBJECT_LAYOUT_BOTTOM_PADDING)

		E_PART_SPACER("favourite_btn.padding.top",
			description { state: "default" 0.0;
				fixed: 0 1;
				align: 0.5 0.0;
				rel2.relative: 1.0 0.0;
				min: 0 SUBJECT_LAYOUT_FAVOURITE_BTN_TOP_PADDING;
			}
		)

		E_PART_SWALLOW("swallow.favourite.btn",
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1 0;
				rel1 {
					relative: 0 1;
					to_x: "padding.right";
					to_y: "favourite_btn.padding.top";
				}
				rel2 {
					relative: 0 0;
					to_x: "padding.right";
					to_y: "padding.bottom";
				}
				min: SUBJECT_LAYOUT_FAVOURITE_BTN_INNER_SIZE SUBJECT_LAYOUT_FAVOURITE_BTN_INNER_SIZE;
			}
		)

		E_PART_SPACER("favourite_btn.padding.left",
			description { state: "default" 0.0;
				fixed: 1 0;
				align: 1 0.5;
				rel1 {
					relative: 0 0;
					to_x: "swallow.favourite.btn";
				}
				rel2 {
					relative: 0 1;
					to_x: "swallow.favourite.btn";
				}
				min: SUBJECT_LAYOUT_FAVOURITE_BTN_RIGHT_PADDING 0;
			}
		)

		E_PART_SWALLOW("swallow.subject",
			description { state: "default" 0.0;
				rel1 {
					relative: 1 1;
					to_x: "padding.left";
					to_y: "padding.top";
				}
				rel2 {
					relative: 0 0;
					to_x: "favourite_btn.padding.left";
					to_y: "padding.bottom";
				}
			}
		)
	}
}

group {
	name: "ev/attachment/base";
	images {
		image: "viewer_icon/email_icon_attachment.png" COMP;
	}
	styles {
		style {
			name: "attachment_info.text.style";
			base: "font=Tizen:style=Regular align=left font_size="36" color=#000000 ellipsis= -1.0";
		}
	}

	parts {
		E_PART_BG (LIST_BG_COLOR)
		E_PART_PADDING_LEFT(ATTACHMENT_LEFT_PADDING)
		E_PART_PADDING_RIGHT(ATTACHMENT_RIGHT_PADDING)
		E_PART_PADDING_TOP(ATTACHMENT_TOP_PADDING)
		E_PART_PADDING_BOTTOM(ATTACHMENT_BOTTOM_PADDING)

		E_PART_IMAGE("attachment.icon",
			description {
				state: "default" 0.0;
				image.normal: "viewer_icon/email_icon_attachment.png";
				align: 0.0 0.5;
				rel1 {
					relative: 1.0 1.0;
					to_x: "padding.left";
					to_y: "padding.top";
				}
				rel2 {
					relative: 1.0 0.0;
					to_x: "padding.left";
					to_y: "padding.bottom";
				}
				min: ATTACHMENT_ICON_SIZE ATTACHMENT_ICON_SIZE;
				max: ATTACHMENT_ICON_SIZE ATTACHMENT_ICON_SIZE;
				color: AO006;
			}
		)

		E_PART_SPACER("attachment.icon.padding.right",
			description {
				align: 0.0 0.5;
				fixed: 1 0;
				rel1 {
					relative: 1.0 0.0;
					to_x: "attachment.icon";
					to_y: "padding.left";
				}
				rel2 {
					to_x: "attachment.icon";
					to_y: "padding.left";
				}
				min: ATTACHMENT_ICON_RIGHT_PADDING 0;
			}
		)

		E_PART_TEXTBLOCK("attachment.info.text",
			description {
				state: "default" 0.0;
				rel1 {
					relative: 1.0 1.0;
					to_x: "attachment.icon.padding.right";
					to_y: "padding.top";
				}
				rel2 {
					relative: 0.0 0.0;
					to_x: "padding.right";
					to_y: "padding.bottom";
				}
				text {
					style: "attachment_info.text.style";
					min: 0 1;
					max: 0 1;
				}
			}
		)

		E_PART_RECT("attachment.event.rect",
			mouse_events: 1;
			description {
				state: "default" 0.0;
				color: TRANSPARENT;
			}
			description {
				state: "pressed" 0.0;
				color: B042;
			}
		)

		E_PART_RECT("attachment.bottom.divider",
			description {
				state: "default" 0.0;
				fixed: 0 1;
				max: -1 1;
				rel1 {
					relative: 0.0 1.0;
					offset: 0 -1;
				}
				rel2 {
					relative: 1.0 1.0;
				}
				color: AO005;
			}
		)
	}

	programs {
		program { name: "click_layout";
			signal: "mouse,clicked,1";
			source: "attachment.event.rect";
			action: SIGNAL_EMIT "attachment.clicked" "edje";
			after: touch_snd;
		}
		program { name: "touch_snd";
			action: RUN_PLUGIN "touch_sound";
		}
		program { name: "pressed";
			signal: "mouse,down,1";
			source: "attachment.event.rect";
			script {
				set_state(PART:"attachment.event.rect", "pressed", 0.0);
			}
		}
		program { name: "unpressed";
			signal: "mouse,up,1";
			source: "attachment.event.rect";
			script {
				set_state(PART:"attachment.event.rect", "default", 0.0);
			}
		}
	}
}

#define PROG1 \
		programs { \
			program { name: "clicked"; \
				signal: "mouse,clicked,1"; \
				source: "bg"; \
				action: SIGNAL_EMIT "clicked" "edje"; \
				after: "touch_snd"; \
			} \
			program { name: "pressed"; \
				signal: "mouse,down,1"; \
				source: "bg"; \
				script { \
					set_state(PART:"icon", "pressed", 0.0); \
				} \
			} \
			program { name: "unpressed"; \
				signal: "mouse,up,1"; \
				source: "bg"; \
				script { \
					set_state(PART:"icon", "default", 0.0); \
				} \
			} \
			program { name: "touch_snd"; \
				action: RUN_PLUGIN "touch_sound"; \
			} \
		}

#define PROG2 \
		programs { \
			program { name: "clicked"; \
				signal: "mouse,clicked,1"; \
				source: "bg"; \
				action: SIGNAL_EMIT "clicked" "edje"; \
				after: "touch_snd"; \
			} \
			program { name: "touch_snd"; \
				action: RUN_PLUGIN "touch_sound"; \
			} \
		}
#define PROG3 \
		programs { \
			program { name: "clicked"; \
				signal: "mouse,clicked,1"; \
				source: "bg"; \
				action: SIGNAL_EMIT "clicked" "edje"; \
				after: "touch_snd"; \
			} \
			program { name: "pressed"; \
				signal: "mouse,down,1"; \
				source: "bg"; \
				script { \
					set_state(PART:"btn_text", "pressed", 0.0); \
				} \
			} \
			program { name: "unpressed"; \
				signal: "mouse,up,1"; \
				source: "bg"; \
				script { \
					set_state(PART:"btn_text", "default", 0.0); \
				} \
			} \
			program { name: "touch_snd"; \
				action: RUN_PLUGIN "touch_sound"; \
			} \
		}

#define BODY_BUTTON_STYLE(_name, _color) \
	style { \
		name: _name; \
		base: "align=center color="_color" font=Tizen:style=Regular font_size="DOWNLOAD_BUTTON_TEXT_SIZE" text_class=tizen ellipsis=1.0"; \
		tag:  "br" "\n"; \
		tag:  "tab" "\t"; \
	}

group { name: "elm/button/base/body_button";
	styles {
		BODY_BUTTON_STYLE("body_button_style_default", ATO015_HEX);
		BODY_BUTTON_STYLE("body_button_style_press", ATO015P_HEX);
		BODY_BUTTON_STYLE("body_button_style_dim", ATO015D_HEX);
	}
	parts {
		part { name : "bg";
			type : RECT;
			scale: 1;
			description {
				state: "default" 0.0;
				min: 0 DOWNLOAD_BUTTON_MIN_HEIGHT;
				color: COLOR_WHITE;
			}
		}
		E_PART_PADDING_BOTTOM(DOWNLOAD_BUTTON_TEXTBLOCK_PADDING_BOTTOM_HEIGHT);
		part { name: "elm.text";
			type: TEXTBLOCK;
			scale: 1;
			description { state: "default" 0.0;
				min: 0 DOWNLOAD_BUTTON_TEXTBLOCK_HEIGHT_MIN;
				text {
					style: "body_button_style_default";
					max: 1 0;
				}
			}
			description { state: "clicked" 0.0;
				inherit: "default" 0.0;
				text {
					style: "body_button_style_press";
					max: 1 0;
				}
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				text {
					style: "body_button_style_dim";
					max: 1 0;
				}
			}
		}
		part { name: "over1";
			type: RECT;
			scale: 1;
			ignore_flags: ON_HOLD;
			description { state: "default" 0.0;
				color: TRANSPARENT_COLOR_VALUE;
			}
		}
		part { name: "over2";
			type: RECT;
			scale: 1;
			repeat_events: 1;
			description { state: "default" 0.0;
				color: TRANSPARENT_COLOR_VALUE;
			}
		}
		part { name: "disabler";
			type: RECT;
			scale: 1;
			description { state: "default" 0.0;
				color: TRANSPARENT_COLOR_VALUE;
				visible: 0;
			}
			description { state: "disabled" 0.0;
				inherit: "default" 0.0;
				visible: 1;
			}
		}
	}
	programs {
		program { name: "pressed";
			signal: "mouse,down,1";
			source: "over1";
			action: SIGNAL_EMIT "elm,action,press" "";
			after: "button_press";
		}
		program { name: "button_press";
			action: STATE_SET "clicked" 0.0;
			target: "elm.text";
		}
		program { name: "clicked";
			signal: "mouse,clicked,1";
			source: "over1";
			action: SIGNAL_EMIT "elm,action,click" "";
			after: "button_unpress";
			after: "touch_sound";
		}
		program { name: "touch_sound";
			action: RUN_PLUGIN "touch_sound";
		}
		program { name: "unpressed";
			signal: "mouse,up,1";
			source: "over2";
			action: SIGNAL_EMIT "elm,action,unpress" "";
			after: "button_unpress";
		}
		program { name: "button_unpress";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
		}
		program { name: "button_disable_set";
			action: STATE_SET "disabled" 0.0;
			target: "elm.text";
		}
		program { name: "button_enable_set";
			action: STATE_SET "default" 0.0;
			target: "elm.text";
		}
		program {
			signal: "button_disable";
			source: "";
			action: STATE_SET "disabled" 0.0;
			target: "disabler";
			after : "button_disable_set";
		}
		program {
			signal: "button_enable";
			source: "";
			action: STATE_SET "default" 0.0;
			target: "disabler";
			after : "button_enable_set";
		}
	}
}

#define ICON_BUTTON(NAME, IMG, PAD_L, PAD_T, WIDTH, HEIGHT, COLOR, PROG) \
	group { name: NAME; \
		images { image: IMG COMP; } \
		parts { \
			part { name: "bg"; \
				type: RECT; \
				scale: 1; \
				mouse_events: 1; \
				description { \
					state: "default" 0.0; \
					color: 0 0 0 0; \
				} \
			} \
			part { name: "pad_l_t"; \
				type: SPACER; \
				scale: 1; \
				description { \
					state: "default" 0.0; \
					min: PAD_L PAD_T; fixed: 1 1; \
					rel2.relative: 0 0; \
					align: 0 0; \
				} \
			} \
			part { name: "icon"; \
				type: IMAGE; \
				scale: 1; \
				repeat_events: 1; \
				description { \
					state: "default" 0.0; \
					image.normal: IMG; \
					color: COLOR; \
					min: WIDTH HEIGHT; max: WIDTH HEIGHT; \
					fixed: 1 1; align: 0 0; \
					rel1 { relative: 1 1; to: "pad_l_t"; } \
				} \
				description { \
					state: "pressed" 0.0; \
					inherit: "default" 0.0; \
				} \
			} \
		} \
		PROG\
	}

ICON_BUTTON("elm/layout/flag.none.icon/default", "list_icon/index_icon_favorite_off.png", 0, 0, 50, 50, AO003, PROG2)
ICON_BUTTON("elm/layout/flag.star.icon/default", "list_icon/index_icon_favorite_on.png", 0, 0, 50, 50, AO003, PROG2)
